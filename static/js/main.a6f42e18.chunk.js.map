{"version":3,"sources":["components/contents/slider/Slider.js","components/contents/checkbox/Checkbox.js","components/Display.js","components/Header.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Slider","props","minValue","maxValue","value","changeRange","className","type","min","max","title","onChange","Checkbox","name","checked","label","disabled","Display","CHECKBOX_LIST","id","isChecked","isDisabled","useState","numbers","uppercase","lowercase","symbols","checkbox","setCheckbox","checkboxChange","e","target","map","prevState","randomstring","generate","password","changePassword","length","lengthUpdate","passwordStrengthClass","setStrengthClass","passwordStrength","setStrength","checkboxDisabled","setDisabled","checkboxDisabledName","setDisabledName","checkBoxChangeGenerate","checkBoxCount","allowedCharacters","charset","checkCount","Object","keys","filter","key","useEffect","onClick","str","el","document","createElement","body","appendChild","select","execCommand","removeChild","alert","lengthValue","parseInt","Header","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6f42e18.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Slider.css'\r\nconst Slider = props => {\r\n    const { minValue, maxValue, value,changeRange } = props;\r\n    return (\r\n        <>\r\n            <span className=\"font-weight-bold\">Length : {value}</span>\r\n            <input className=\"range-input\" type=\"range\" min={minValue} max={maxValue} value={value} title={value} onChange={changeRange} />            \r\n        </>\r\n    )\r\n}\r\n\r\nSlider.propTypes = {\r\nminValue:PropTypes.string,\r\nmaxValue:PropTypes.string,\r\nvalue:PropTypes.string,\r\nchangeRange:PropTypes.func\r\n}\r\n\r\nexport default Slider\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Checkbox.css'\r\nconst Checkbox = props => {\r\n    const{name,checked,label,disabled,onChange}=props\r\n    return (\r\n        <>       \r\n        <span className=\"checkbox-value-wrapper\">\r\n        <input type=\"checkbox\" className=\"checkbox-value\" disabled={disabled} name={name} checked={checked} onChange={onChange}/>\r\n        &nbsp;\r\n            <label>{label}</label>\r\n            </span>     \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nCheckbox.propTypes = {\r\nname:PropTypes.string,\r\nchecked:PropTypes.bool,\r\ndisabled:PropTypes.bool,\r\nlabel:PropTypes.string,\r\nonChange:PropTypes.func\r\n}\r\n\r\nexport default Checkbox\r\n","import React, { useState, useEffect } from 'react'\r\nimport Slider from './contents/slider/Slider'\r\nimport Checkbox from './contents/checkbox/Checkbox'\r\nimport randomstring from 'randomstring'\r\nconst Display = () => {\r\n    const CHECKBOX_LIST = [\r\n        {\r\n            id: 0,\r\n            label: 'Numeric',\r\n            name: 'numbers',\r\n            isChecked: true,\r\n            isDisabled: true,\r\n            value: true\r\n        },\r\n        {\r\n            id: 1,\r\n            label: 'Uppercase',\r\n            name: 'uppercase',\r\n            isChecked: true,\r\n            isDisabled: true,\r\n            value: true\r\n        },\r\n        {\r\n            id: 2,\r\n            label: 'Lowercase',\r\n            name: 'lowercase',\r\n            isChecked: true,\r\n            isDisabled: true,\r\n            value: true\r\n        },\r\n        {\r\n            id: 3,\r\n            label: 'Symbols',\r\n            name: 'symbols',\r\n            isChecked: true,\r\n            isDisabled: true,\r\n            value: true\r\n        },\r\n    ];\r\n    const [checkbox, setCheckbox] = useState({\r\n        numbers: true,\r\n        uppercase: true,\r\n        lowercase: true,\r\n        symbols: true,\r\n    })\r\n    const lengthChange = e => {\r\n        const lengthValue = parseInt(e.target.value)\r\n        lengthUpdate(e.target.value);\r\n        checkBoxChangeGenerate();\r\n        if (lengthValue > 4) {\r\n            setStrengthClass('green-bg');\r\n            lengthValue > 10 ? setStrength('Strong') : setStrength('Good');\r\n        }\r\n        else {\r\n            setStrengthClass('red-bg');\r\n            setStrength('Weak');\r\n        }\r\n    };\r\n    const checkboxChange = e => {\r\n        let { name, checked } = e.target;\r\n        CHECKBOX_LIST.map(checkbox => {\r\n            if (checkbox.name === name) {\r\n                checkbox.isChecked = checked;\r\n                setCheckbox(prevState => ({ ...prevState, [name]: checkbox.isChecked }));\r\n                // setCheckbox(prevState=>({...prevState, [name]: checkbox.isChecked }));\r\n            }\r\n            return '';\r\n        })\r\n    };\r\n    const [password, changePassword] = useState(randomstring.generate(4))\r\n    const [length, lengthUpdate] = useState(\"4\");\r\n    const [passwordStrengthClass, setStrengthClass] = useState('red-bg');\r\n    const [passwordStrength, setStrength] = useState('Weak');\r\n    const [checkboxDisabled, setDisabled] = useState(false);\r\n    const [checkboxDisabledName, setDisabledName] = useState(\"\");\r\n\r\n    const checkBoxChangeGenerate = () => {\r\n        checkBoxCount();\r\n        let allowedCharacters = \"\";\r\n        if (checkbox.numbers) {\r\n            allowedCharacters += \"1234567890\"\r\n        }\r\n        if (checkbox.lowercase) {\r\n            allowedCharacters += \"abcdefghijklmnopqrstuvwxyz\"\r\n        }\r\n        if (checkbox.uppercase) {\r\n            allowedCharacters += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n        }\r\n        if (checkbox.symbols) {\r\n            allowedCharacters += \"!@#$%^&*()?><{}_-][\\|\"\r\n        }\r\n        changePassword(randomstring.generate({\r\n            length: length,\r\n            charset: allowedCharacters\r\n        }));\r\n    }\r\n    const checkBoxCount = () => {\r\n        const checkCount = Object.keys(checkbox).filter(key => checkbox[key]);\r\n        const disabled = checkCount.length === 1;\r\n        const name = checkCount[0];\r\n        if (disabled) {\r\n            setDisabled(true);\r\n            setDisabledName(name);\r\n        }\r\n        else {\r\n            setDisabled(false);\r\n            setDisabledName(\"\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        checkBoxChangeGenerate();\r\n    }, [checkbox.numbers, checkbox.uppercase, checkbox.lowercase, checkbox.symbols]);\r\n\r\n    const copyToClipboard = str => {\r\n        const el = document.createElement('textarea');\r\n        el.value = `${password}`;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n        alert(\"Copied!\")\r\n      };\r\n    return (\r\n        <>\r\n            <span>This is a password generator app</span>\r\n            <div className=\"row main-wrapper\">\r\n                <div className=\"card col-md-12\">\r\n                    <div className={passwordStrengthClass}>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <span className=\"password-display-text\">{password}</span>\r\n                                </div>\r\n                                <div className=\"col-md-6 password-actions\">\r\n                                    <span>\r\n                                        <button className=\"copy-btn\" onClick={copyToClipboard}><i className=\"fa fa-clone\"></i></button>\r\n                                        <button className=\"copy-btn\" onClick={checkBoxChangeGenerate}><i className=\"fa fa-undo\"></i></button>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"password-description col-md-6\">\r\n                                <span>Password Strength: {passwordStrength}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"card col-md-12\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Slider minValue=\"3\" maxValue=\"30\" value={length} changeRange={lengthChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"password-checkbox col-md-12\">\r\n                            {/* {\r\n                                CHECKBOX_LIST.map(checkbox => (\r\n                                    < Checkbox key={checkbox.id} name={checkbox.name} checked={checkbox.isChecked} value={checkbox.value} label={checkbox.label} onChange={checkboxChange} />\r\n                                ))\r\n                            } */}\r\n                            < Checkbox key=\"0\" name=\"uppercase\" checked={checkbox.uppercase} label=\"Uppercase\" disabled={checkboxDisabled && checkbox.uppercase && checkboxDisabledName === \"uppercase\"} onChange={checkboxChange} />\r\n                            < Checkbox key=\"1\" name=\"lowercase\" checked={checkbox.lowercase} label=\"Lowercase\" disabled={checkboxDisabled && checkbox.lowercase && checkboxDisabledName === \"lowercase\"} onChange={checkboxChange} />\r\n                            < Checkbox key=\"2\" name=\"numbers\" checked={checkbox.numbers} label=\"Numeric\" disabled={checkboxDisabled && checkbox.numbers && checkboxDisabledName === \"numbers\"} onChange={checkboxChange} />\r\n                            < Checkbox key=\"3\" name=\"symbols\" checked={checkbox.symbols} label=\"Symbols\" disabled={checkboxDisabled && checkbox.symbols && checkboxDisabledName === \"symbols\"} onChange={checkboxChange} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n            <h1 className=\"h1\">Strong Password Generator</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Display from './Display'\r\nimport Header from './Header'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <>\r\n         <Header/>\r\n         <Display/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"app-container container\">      \n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}